// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReportWebService.Model.Context;

namespace ReportWebService.Migrations
{
    [DbContext(typeof(MySQLContext))]
    partial class MySQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("ReportUser", b =>
                {
                    b.Property<long>("ReportsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("ReportsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ReportUser");
                });

            modelBuilder.Entity("ReportWebService.Model.LoginToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameLocalLogin")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshTokenExpiryTime")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LoginTokens");
                });

            modelBuilder.Entity("ReportWebService.Model.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("ReportWebService.Model.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReportAzureId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("WorkspaceAzureId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ReportWebService.Model.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ClientAzureId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TenantAzureId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("ReportWebService.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Disable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LoginTemplate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("LoginTokenId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LoginTokenId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ReportUser", b =>
                {
                    b.HasOne("ReportWebService.Model.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReportWebService.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReportWebService.Model.Report", b =>
                {
                    b.HasOne("ReportWebService.Model.Tenant", "Tenant")
                        .WithMany("Reports")
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("ReportWebService.Model.User", b =>
                {
                    b.HasOne("ReportWebService.Model.LoginToken", "LoginToken")
                        .WithMany("Users")
                        .HasForeignKey("LoginTokenId");

                    b.HasOne("ReportWebService.Model.Profile", "Profile")
                        .WithMany("Users")
                        .HasForeignKey("ProfileId");

                    b.Navigation("LoginToken");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ReportWebService.Model.LoginToken", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReportWebService.Model.Profile", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReportWebService.Model.Tenant", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
